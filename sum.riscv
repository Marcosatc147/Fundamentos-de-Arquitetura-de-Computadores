.data
soma:	.asciz "ADD: "
subt:	.asciz "\nSUB: "
xorr: 	.asciz "\nXOR: "
andd: 	.asciz "\nAND: "
orr: 	.asciz "\nOR: "
msk: 	.asciz "\nMASK: "

.text
main:
    li a7, 5            # Solicitar entrada para o primeiro número
    ecall

    # Salvar o primeiro número em um registrador (por exemplo, t0)
    mv t0, a0

    li a7, 5            # Solicitar entrada para o segundo número
    ecall

    # Salvar o segundo número em um registrador (por exemplo, t1)
    mv t1, a0
    
    li a7, 5 		#Solicitar entrada para o terceiro numero 
    ecall
    
    #salvar o terceiro numero em um registrador(t2)
    mv t2, a0

    # Somar os números nos registradores t0 e t1
    la a0, soma
    li a7, 4		
    ecall
    
    add a0, t0, t1
    
    li a7, 1            # Imprimir o resultado
    ecall
    
    # Subtrair os numeros nos registradores t0 e t1
    la a0, subt
    li a7, 4		
    ecall
    
    sub a0, t0, t1
    li a7, 1            # Imprimir o resultado
    ecall
    
    #and nos numeros nos registradores t0 e t1
    la a0, andd
    li a7, 4
    ecall
    
    and a0, t0, t1
    li a7, 1 #imprimir resultado
    ecall
    
    #or nos numeros nos regs t0 e t1
    la a0, orr
    li a7, 4
    ecall
    
    or a0, t0, t1
    li a7, 1 #imprimir resultado
    ecall
    
    # xor nos numeros nos registradores t0 e t1
    la a0, xorr
    li a7, 4
    ecall
    
    xor a0, t0, t1
    li a7, 1 #imprimir resultado
    ecall
    
    # mascara entre t2 e 31
    li a0, msk
    li a7, 4
    ecall 
    
    and a0, t2, 31
    li a7, 1 #imprimir resultado
    ecall

    li a7, 10           # Encerrar o programa
    ecall
